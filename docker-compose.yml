version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: supply-chain-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: supply_chain
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    command: ["postgres", "-c", "listen_addresses=*"]  # ðŸ‘ˆ Allow remote connections
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: supply-chain-pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile.dev
    container_name: supply-chain-api
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/supply_chain?schema=supply_chain
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/api/src:/app/apps/api/src
      - ./packages/database/prisma:/app/packages/database/prisma
      - ./packages:/app/packages
    command: npm run start:dev

volumes:
  postgres_data:
  pgadmin_data: